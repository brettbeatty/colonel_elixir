name: Check
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir_version: [1.13.4, 1.14.5, 1.15.7, 1.16.2]
        otp_version: [23.3.4, 24.3.4, 25.3.2, 26.2.4]
    steps:
      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp_version }}
          elixir-version: ${{ matrix.elixir_version }}
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: deps_cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp_version }}-${{ matrix.elixir_version }}-deps-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp_version }}-${{ matrix.elixir_version }}-deps-
          save-always: true
      - name: Install dependencies
        if: steps.deps_cache.outputs.cahce-hit != 'true'
        run: mix deps.get
      - name: Cache build
        uses: actions/cache@v4
        with:
          path: _build
          key: ${{ runner.os }}-${{ matrix.otp_version }}-${{ matrix.elixir_version }}-build-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp_version }}-${{ matrix.elixir_version }}-build-
          save-always: true
      - name: Run tests
        run: mix test
      - name: Run credo checks
        run: mix credo --strict
      - name: Check formatted
        run: mix format --check-formatted
      - name: Cache PLTs
        id: plt_cache
        uses: actions/cache@v4
        with:
          path: priv/plt
          key: ${{ runner.os }}-${{ matrix.otp_version }}-${{ matrix.elixir_version }}-plt-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp_version }}-${{ matrix.elixir_version }}-plt-
          save-always: true
      - name: Build PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt
      - name: Run dialyzer
        run: mix dialyzer --format github
